enum SubscriptionStatus {
  BASIC
  PREMIUM
  SUPER
}

type RestaurantOwner @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstname: String!
  lastname: String!
  email: AWSEmail!
  address: String!
  phone: Int
  dob: AWSDate
  planstatus: SubscriptionStatus
}

enum OrderStatus {
  NEW
  COOKING
  READY_FOR_PICKUP
  PICKED_UP
  COMPLETED
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  sub: String!
  name: String!
  address: String!
  lat: Float!
  lng: Float!
  Orders: [Order] @hasMany(indexName: "byUser", fields: ["id"])
}

type OrderDish @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: Int
  Dish: Dish @hasOne
  orderID: ID! @index(name: "byOrder")
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  status: OrderStatus
  userID: ID! @index(name: "byUser")
  Restaurant: Restaurant @hasOne
  subtotal: Float!
  OrderDishes: [OrderDish] @hasMany(indexName: "byOrder", fields: ["id"])
}

type Dish @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String
  description: String
  price: Float
  restaurantID: ID! @index(name: "byRestaurant")
}

type Restaurant @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String
  deliveryFee: Float
  maxDeliveryTime: Int
  MinDeliveryTime: Int
  rating: Float
  address: String
  lat: Float
  lng: Float
  Dishes: [Dish] @hasMany(indexName: "byRestaurant", fields: ["id"])
}
 